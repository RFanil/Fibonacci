version: '3.4'

services:
    rabbitmqconsumer:
        image: ${DOCKER_REGISTRY-}rabbitmqconsumer
        container_name: rabbitmqconsumer
        environment:
            - EventBusChannelSettings__PrefetchCount=${DegreeOfParallelism}
            - AppSettings__MaxDegreeOfParallelism=${DegreeOfParallelism}
        build:
            context: .
            dockerfile: Services/RabbitMQConsumer/Dockerfile
        restart: on-failure
        depends_on:
            - rabbitmqproducer
            - rabbitmq
        links: 
            - rabbitmq
        

    rabbitmqproducer:
        image: ${DOCKER_REGISTRY-}rabbitmqproducer
        container_name: rabbitmqproducer
        build:
            context: .
            dockerfile: Services/RabbitMQProducer/Dockerfile
        depends_on:
            - rabbitmq
        expose:
            - "80"

    rabbitmq:
        image: "rabbitmq:3.11.10-management"
        environment:
            RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
            RABBITMQ_DEFAULT_USER: "rabbitmq"
            RABBITMQ_DEFAULT_PASS: "rabbitmq"
            RABBITMQ_DEFAULT_VHOST: "/"
        ports:
            - "15672:15672"
            - "5672:5672"
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:15672"]
            interval: 30s
            timeout: 10s
            retries: 5
        labels:
            NAME: "rabbitmq1"
        volumes:
            - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
            - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq